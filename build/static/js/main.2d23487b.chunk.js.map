{"version":3,"sources":["redux/auth/auth-operations.js","redux/operations.js","redux/actions.js","components/contacts.module.css","redux/auth/auth-selectors.js","components/AuthNav.js","components/NavBar.js","components/cat.png","components/UserMenu.js","components/Navigation.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/reducers.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","logIn","createAsyncThunk","credentials","a","rejectWithValue","post","data","message","alert","logOut","_","register","currentUser","thunkAPI","state","getState","persistedToken","auth","get","getThunkData","addThunkData","contact","deleteThunkData","contactId","delete","id","changeFilter","createAction","module","exports","getIsLoggedIn","isLoggedIn","getUsername","user","name","AuthNav","className","s","navList","navItem","to","navLink","activeClassName","activeNavLink","NavBar","exact","UserMenu","dispatch","useDispatch","useSelector","container","src","avatar","alt","width","type","btn","onClick","Navigation","header","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","ContactsPage","lazy","RegisterPage","LoginPage","App","useEffect","fallback","path","contactSlice","createSlice","initialState","loading","error","extraReducers","pending","action","fulfilled","payload","rejected","filter","filterReducer","createReducer","authSlice","email","isCurrentUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","contacts","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d23487b.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const logIn = createAsyncThunk('auth/login', async (credentials,  { rejectWithValue }) => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (err) {\n    rejectWithValue(err.message);\n    alert('Wrong email or password');\n    return;\n  }\n});\n\nexport const logOut = createAsyncThunk('auth/logout', async (_,  { rejectWithValue }) => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\n\nexport const register = createAsyncThunk('auth/register', async (credentials,  { rejectWithValue }) => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (err) {\n    alert('Something went wrong');\n    return rejectWithValue(err.message);\n  }\n});\n\nexport const currentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      // console.log('No token');\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (err) {\n      return thunkAPI.rejectWithValue();\n    }\n  },\n);\n\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nexport const getThunkData = createAsyncThunk('getContact',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('/contacts');\n      return data;\n    } catch (err) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\n\nexport const addThunkData = createAsyncThunk('addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      return data;\n    }\n    catch (err) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\n\nexport const deleteThunkData = createAsyncThunk('deleteContact',\n  async (contactId, { rejectWithValue }) => { \n    try {\n      const { data: { id } } = await axios.delete(`/contacts/${contactId}`);\n      return id;\n     }\n    catch (err)\n    {\n     return rejectWithValue(err.message); \n    }\n  });","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('changeFilter');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"contacts_title__3KfmP\",\"form\":\"contacts_form__2skxG\",\"input\":\"contacts_input__1nuNS\",\"btn\":\"contacts_btn__1JbCg\",\"btnDelete\":\"contacts_btnDelete__3diS_\",\"list\":\"contacts_list__2PGH1\",\"label\":\"contacts_label__1INRo\",\"navList\":\"contacts_navList__oMJrX\",\"navItem\":\"contacts_navItem__BCKOT\",\"navLink\":\"contacts_navLink__Am-XV\",\"activeNavLink\":\"contacts_activeNavLink__1Oj3P\",\"header\":\"contacts_header__1jwPa\",\"container\":\"contacts_container__Ts9x3\",\"name\":\"contacts_name__3sO6s\",\"avatar\":\"contacts_avatar__6f7Z2\"};","export const getIsLoggedIn = state => state.auth.isLoggedIn;\nexport const getUsername = state => state.auth.user.name;\nexport const getIsCurrentUser = state => state.auth.isCurrentUser;","import { NavLink } from 'react-router-dom';\nimport s from \"./contacts.module.css\";\n\nexport default function AuthNav() {\n  return (\n    <nav>\n      <ul className={s.navList}>\n        <li className={s.navItem}>\n          <NavLink\n            to=\"/login\"\n            className={s.navLink}\n            activeClassName={s.activeNavLink}\n          >\n            Login\n          </NavLink>\n        </li>\n        <li className={s.navItem}>\n          <NavLink\n            to=\"/register\"\n            className={s.navLink}\n            activeClassName={s.activeNavLink}\n          >\n            Register\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}","import { NavLink } from 'react-router-dom';\nimport s from \"./contacts.module.css\";\n\nexport default function NavBar() {\n  return (\n    <nav>\n      <NavLink\n        exact\n        to=\"/\"\n        className={s.navLink}\n        activeClassName={s.activeNavLink}\n      >\n        Contacts\n      </NavLink>\n    </nav>\n  );\n}","export default __webpack_public_path__ + \"static/media/cat.3520beac.png\";","import { useDispatch, useSelector } from 'react-redux';\nimport { getUsername } from '../redux/auth/auth-selectors';\nimport { logOut } from '../redux/auth/auth-operations';\nimport s from './contacts.module.css';\nimport avatar from './cat.png';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(getUsername);\n\n   return (\n    <div className={s.container}>\n      <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} />\n      <span className={s.name}>Hello, {name}!</span>\n      <button type=\"button\" className={s.btn} onClick={() => dispatch(logOut())}>\n        Log Out\n      </button>\n    </div>\n  );\n  \n}","import s from \"./contacts.module.css\";\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\nimport AuthNav from './AuthNav';\nimport NavBar from './NavBar';\nimport UserMenu from './UserMenu';\n\n\nexport default function Navigation() {\n\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <header className={s.header}>\n      <NavBar/>\n        { isLoggedIn ? <UserMenu/> : <AuthNav/>}\n    </header>\n  );\n}","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsLoggedIn } from '../redux/auth/auth-selectors';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}","import \"./App.css\";\nimport { Switch } from 'react-router-dom';\nimport { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Navigation from './components/Navigation';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { currentUser } from './redux/auth/auth-operations';\n\n\nconst ContactsPage = lazy(() => import('./pages/Contacts'));\nconst RegisterPage = lazy(() => import('./pages/Register'));\nconst LoginPage = lazy(() => import('./pages/Login'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(currentUser());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <PrivateRoute exact path=\"/\" redirectTo=\"/login\">\n            <ContactsPage />\n          </PrivateRoute>\n          <PublicRoute exact path=\"/register\" restricted>\n            <RegisterPage />\n          </PublicRoute>\n          <PublicRoute exact path=\"/login\" restricted>\n            <LoginPage />\n          </PublicRoute>\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n","import { createReducer, createSlice } from '@reduxjs/toolkit';\nimport { changeFilter } from './actions';\nimport { getThunkData, addThunkData, deleteThunkData } from './operations';\n\nconst contactSlice = createSlice({\n  name: 'phonebook',\n  initialState: {\n    contact: [],\n    loading: false,\n    error: null,\n  },\n  extraReducers: {\n    [getThunkData.pending]: (state, action) => ({\n        ...state,\n        loading: true,\n    }),\n    [getThunkData.fulfilled]: (state, action) => ({\n        ...state,\n        contact: action.payload,\n        loading: false,\n    }),\n    [getThunkData.rejected]: (state, action) => ({\n        ...state,\n        loading: false,\n        error: action.payload,\n    }),\n    [addThunkData.pending]: (state, action) => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n    [addThunkData.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        contact: [...state.contact, action.payload],\n        loading: false,\n      };\n    },\n    [addThunkData.rejected]: (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    },\n    [deleteThunkData.pending]: (state, action) => ({\n        ...state,\n        loading: true,\n    }),\n    [deleteThunkData.fulfilled]: (state, action) => ({\n      ...state,\n      contact: state.contact.filter(({ id }) => id !== action.payload),\n      loading: false,\n    }),\n    [deleteThunkData.rejected]: (state, action) => ({\n        ...state,\n        loading: false,\n        error: action.payload,\n    }),\n  }\n});\nexport default contactSlice.reducer;\n\nexport const filterReducer = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});","import { createSlice } from '@reduxjs/toolkit';\nimport { register, logIn, logOut, currentUser } from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [currentUser.pending](state) {\n      state.isCurrentUser = true;\n    },\n    [currentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isCurrentUser = false;\n    },\n    [currentUser.rejected](state) {\n      state.isCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport contactSlice, { filterReducer } from './reducers';\nimport authSlice from './auth/auth-slice';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authSlice),\n    contacts: contactSlice,\n    filter: filterReducer,\n  },\n  middleware,\n  // middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}