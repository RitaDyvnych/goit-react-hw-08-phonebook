{"version":3,"sources":["pages/styles.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","redux/selectors.js","components/Form.js","components/ContactList.js","components/Filter.js","pages/Contacts.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","getContact","state","contacts","contact","getFilteredContacts","createSelector","filter","items","el","name","toLowerCase","includes","Form","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChangeInput","e","target","className","style","form","onSubmit","preventDefault","find","alert","addThunkData","input","autoComplete","type","pattern","title","required","onChange","btn","ContactList","filterContacts","useEffect","getThunkData","list","map","listItem","btnDelete","id","onClick","deleteThunkData","Filter","htmlFor","label","changeFilter","Contacts","s"],"mappings":"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","file":"static/js/3.5a5f1aa0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"styles_label__1AI8g\",\"title\":\"styles_title__M8GYf\",\"form\":\"styles_form__2Iflk\",\"input\":\"styles_input__2XiaJ\",\"btn\":\"styles_btn__8WCUw\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContact = state => state.contacts.contact;\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = createSelector(\n    [getContact, getFilter],\n    (items, filter) =>\n        items.filter((el) =>\n            el.name.toLowerCase().includes(filter.toLowerCase()),\n        ),\n);","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addThunkData } from '../redux/operations';\nimport { getContact } from '../redux/selectors';\nimport style from \"./contacts.module.css\";\n\nexport default function Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContact);\n  const dispatch = useDispatch();\n  \n  \n  const handleChangeInput = (e) => {\n   if (e.target.name === 'name') {\n      setName(e.target.value);\n    } else if (e.target.name === 'number') {\n      setNumber(e.target.value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addThunkData({ name, number }));\n      setName(\"\");\n      setNumber(\"\");\n    }\n  };\n\n  return (\n      <>\n        <form\n          className={style.form}\n          onSubmit={handleSubmit}\n        >\n          <label>Name</label>\n          <input\n          className={style.input}\n            value={name}\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChangeInput}\n          />\n          <label>Number</label>\n          <input\n            className={style.input}\n          value={number}\n            autoComplete=\"off\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChangeInput}\n          />\n          <button type=\"submit\" className={style.btn}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n\n}\n","import React, { useEffect } from \"react\";\nimport style from \"./contacts.module.css\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getThunkData, deleteThunkData } from '../redux/operations';\nimport { getFilteredContacts } from '../redux/selectors';\n\n\nexport default function ContactList() {\n\n  const dispatch = useDispatch();\n  const filterContacts = useSelector(getFilteredContacts);\n\n  useEffect(() => {\n    dispatch(getThunkData());\n  }, [dispatch]);\n\n  return (\n      <ul className={style.list}>\n      {filterContacts.map((el) => (\n          <li className={style.listItem} key={el.id}>\n            {el.name}: {el.number}\n            <button\n              type=\"button\"\n              className={style.btnDelete}\n              id={el.id}\n              onClick={()=>dispatch(deleteThunkData(el.id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n}","import React from \"react\";\nimport style from \"./contacts.module.css\";\nimport { changeFilter } from '../redux/actions';\nimport { useDispatch } from 'react-redux';\n\nexport default function Filter() {\n  \n  const dispatch = useDispatch();\n\n  return (\n      <>\n        <label htmlFor=\"find\" className={style.label}>\n          Find contacts by name\n        </label>\n      <input\n        className={style.input}\n        autoComplete=\"off\"\n        id=\"find\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]\"\n        onChange={(e) => {\n          e.preventDefault();\n          dispatch(changeFilter(e.target.value.toLowerCase()));\n        }}\n        ></input>\n      </>\n    );\n}\n","import Form from \"../components/Form\";\nimport ContactList from \"../components/ContactList\";\nimport Filter from \"../components/Filter\";\nimport s from './styles.module.css';\n\nexport default function Contacts() {\n  return (\n    <>\n        <h1 className={s.title}>Phonebook</h1>\n        <Form />\n        <Filter />\n        <ContactList />\n      </>\n    );\n}"],"sourceRoot":""}